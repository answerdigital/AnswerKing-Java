name: Docker Image Pipeline
on:
  workflow_run:
    workflows: ["Integration and code analysis"]
    branches:
      - main
      - master
      - develop
      - v1.1.0-preview.3
    types: [opened, synchronize, reopened, completed]

env:
  REGISTRY: ghcr.io/answerconsulting/answerking-java
  IMAGE_NAME: answer-king-rest-api_app #${{ github.repository }}

jobs:
  on-success:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: 'maven'

      - name: Build with Maven
        run: mvn install -DskipTests

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Set tags
        id: vars_tags
        run:  echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT

      - name: Check tags output
        run:  |
          echo ${{ steps.vars_tags.outputs.tag }}

      - name: Build using docker-compose template
        run: docker-compose build

      - name: List Docker images
        run: docker images

      # - name: Push images
      #  run: docker-compose push #--ignore-push-failures

      - name: Tag docker image
        run: docker tag answer-king-rest-api_app ghcr.io/answerconsulting/answerking-java/answer-king-rest-api_app:latest

      - name: Push images
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
