name: Integration and code analysis
on:
  workflow_dispatch: null
  push:
    branches:
      - main
      - master
      - develop
      - v1.1.0-preview.3
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  Sonar-Cloud:
    name: Static Code Analysis - Sonar Cloud
    outputs:
      job-status: ${{ job.status }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: 'maven'
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2         
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -Dsonar.coverage.jacoco.xmlReportPaths=./target/site/jacoco/jacoco.xml -B verify sonar:sonar -Dsonar.projectKey=AnswerConsulting_AnswerKing-Java -Dsonar.projectName=AnswerKing-Java
  Build-Test:
    name: Integration Test
    outputs:
      job-status: ${{ job.status }}
    runs-on: ubuntu-latest
    permissions:
      checks: write

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: 'maven'

      - name: Build with Maven
        run: mvn install -DskipTests

      - name: Run tests with Maven
        run: mvn test

      - name: Run code coverage report
        run: mvn jacoco:report

      - name: Run code coverage check
        run: mvn clean verify

      - name: Publish test coverage results
        id: jacoco_reporter
        uses: PavanMudigonda/jacoco-reporter@v4.8
        with:
          coverage_results_path: 'target/site/jacoco/jacoco.xml'
          coverage_report_title: 'Test coverage results'
          coverage_report_name: 'Test coverage results'
          github_token: ${{ secrets.GITHUB_TOKEN }}

  Notify-Slack:
    if: ${{ always() }}
    needs: [ Build-Test ]
    runs-on: ubuntu-latest
    name: Send Slack Notification
    steps:
    
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: Send GitHub trigger payload to Slack Workflow Builder
        if: github.event_name == 'pull_request' && github.event.action == 'opened'
        id: slack
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
            "PR_URL": "${{ github.event_name == 'push' && github.event.repository.html_url || github.event.pull_request.html_url }}",
            "Test_Status": "${{ needs.Build-Test.outputs.job-status }}",
            "Title": "${{ github.event_name == 'push' && github.event.commits[0].message || github.event.pull_request.title }}",  
            "Type": "${{ github.event_name == 'push' && 'Merged' || github.event.action }}",
            "Author": "${{ github.actor }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
