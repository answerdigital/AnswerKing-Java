name: Terraform - EC2
on:
  workflow_run:
    workflows: ["Docker Image Pipeline"]
    branches:
      - main
      - master
      - develop
      - v1.1.0-preview.3
      - BENCH-280
    types: [opened, synchronize, reopened, completed]

env:
  REGISTRY: ghcr.io/answerconsulting/answerking-java
  IMAGE_NAME: answer-king-rest-api_app #${{ github.repository }}

jobs:
  terraform:
    runs-on: ubuntu-latest
    name: Terraform
    permissions:
      contents: read
      packages: write
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      # TF_ACTION_WORKING_DIR: 'terraform'
    defaults:
      run:
        shell: bash
        # We keep Terraform files in the terraform directory.
        working-directory: ./terraform

    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.7
          terraform_wrapper: false
          # cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
       # if: github.event_name == 'pull_request'
        run: terraform plan -no-color -input=false
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        # if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false
